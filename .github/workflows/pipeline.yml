name: Deployment pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]
    types: [opened, synchronize]
    
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run lint
      - name: test
        run: npm run test
      - name: build
        run: npm run build


  tag_release:
    needs: simple_deployment_pipeline
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}    
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@777684df761b882a3f4f70db16ac70d8cc78d0ea
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_to_render:
    needs: simple_deployment_pipeline
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') && needs.simple_deployment_pipeline.result == 'success'  }} 
    steps:
    - name: Trigger deployment
      run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  discord_curl_message:
    needs: simple_deployment_pipeline
    runs-on: ubuntu-20.04
    if: ${{ always() }}
    steps:
    - name: message on success
      if: ${{ needs.simple_deployment_pipeline.result == 'success' }}
      uses: actions/checkout@v4
    - name: Send Notification to Discord
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        MESSAGE: 'New push on repo!'
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\": \"$MESSAGE\"}" \
             $DISCORD_WEBHOOK_URL

    - name: message on failure
      if: ${{ needs.simple_deployment_pipeline.result == 'failure' }}
      uses: actions/checkout@v4
    - name: Send Notification to Discord
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        MESSAGE: 'Push failed :(!'
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"content\": \"$MESSAGE\"}" \
             $DISCORD_WEBHOOK_URL
